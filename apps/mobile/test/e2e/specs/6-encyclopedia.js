// For authoring Nightwatch tests, see
// http://nightwatchjs.org/guide#usage

// automatically uses dev Server port from /config.index.js
// default: http://localhost:8080
// see nightwatch.conf.js

let devServer
const TIMEOUT = 10000 // Can be adjusted depending on the Internet connection...

module.exports = {
  'Main': browser => {
    devServer = browser.globals.devServerURL;

    browser
      .url(`${devServer}/#/encyclopedia`)
      .waitForElementVisible('#encyclopedia', TIMEOUT)
      .execute((() => document.getElementById('disclaimer').style.display = 'none'), [])
      .assert.containsText('h2', 'Encyclopédie')
      .assert.containsText('h3', 'Statistiques')
      .assert.visible('nav')
      .assert.elementCount('nav > a', 8)
      .assert.containsText('nav > a:first-child', 'Genres')
      .assert.containsText('nav > a:nth-child(2)', 'Groupes')
      .assert.containsText('nav > a:nth-child(3)', 'Artistes')
      .assert.containsText('nav > a:nth-child(4)', 'Albums')
      .assert.containsText('nav > a:nth-child(5)', 'Audios')
      .assert.containsText('nav > a:nth-child(6)', 'Vidéos')
      .assert.containsText('nav > a:nth-child(7)', 'Labels')
      .assert.containsText('nav > a:last-child', 'Lieux')
      .click('#language-switcher')
      .assert.containsText('h2', 'Encyclopedia')
      .assert.containsText('h3', 'Statistics')
      .assert.containsText('nav > a:first-child', 'Genres')
      .assert.containsText('nav > a:nth-child(2)', 'Bands')
      .assert.containsText('nav > a:nth-child(3)', 'Artists')
      .assert.containsText('nav > a:nth-child(4)', 'Albums')
      .assert.containsText('nav > a:nth-child(5)', 'Audios')
      .assert.containsText('nav > a:nth-child(6)', 'Videos')
      .assert.containsText('nav > a:nth-child(7)', 'Labels')
      .assert.containsText('nav > a:last-child', 'Places')
      .click('#language-switcher')
      // .assert.elementCount('.figures > ul > li', 8)
  },
  'Genres': browser => {
    browser
      .click('a[href$="genres"]')
      .waitForElementVisible('#genres a', TIMEOUT)
      .assert.containsText('h2', 'Genres')
      .click('#language-switcher')
      .assert.containsText('h2', 'Genres')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'Black S')
      // .assert.containsText('#genres a:first-child', 'Black Symphonique')
      .pause(TIMEOUT)
      .click('#genres a:first-child')
      .assert.visible('h2')
      .assert.visible('nav')
      .assert.containsText('nav > a[href$="bands"]', 'Groupes phares')
      .assert.containsText('nav > a[href$="albums"]', 'Albums célèbres')
      .click('#language-switcher')
      .assert.containsText('nav > a[href$="bands"]', 'Famous bands')
      .assert.containsText('nav > a[href$="albums"]', 'Well-known albums')
      .click('#language-switcher')
      .pause(TIMEOUT)
      .click('.bands a:first-child')
      .waitForElementVisible('#band', TIMEOUT)
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Bands': browser => {
    browser
      .click('a[href$="bands"]')
      .waitForElementVisible('#bands a', TIMEOUT)
      .assert.containsText('h2', 'Groupes')
      .click('#language-switcher')
      .assert.containsText('h2', 'Bands')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'children of bodom')
      // .assert.containsText('#bands a:first-child', 'Children Of Bodom')
      .pause(TIMEOUT)
      .click('#bands a:first-child')
      .waitForElementVisible('#band', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Artists': browser => {
    browser
      .click('a[href$="artists"]')
      .waitForElementVisible('#artists a', TIMEOUT)
      .assert.containsText('h2', 'Artistes')
      .click('#language-switcher')
      .assert.containsText('h2', 'Artists')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'angela gossow')
      // .assert.containsText('#artists a:first-child', 'Angela Gossow')
      .pause(TIMEOUT)
      .click('#artists a:first-child')
      .waitForElementVisible('#artist', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Albums': browser => {
    browser
      .click('a[href$="albums"]')
      .waitForElementVisible('#albums a', TIMEOUT)
      .assert.containsText('h2', 'Albums')
      .click('#language-switcher')
      .assert.containsText('h2', 'Albums')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'wintersun')
      // .assert.containsText('#albums a:first-child', 'Wintersun')
      .pause(TIMEOUT)
      .click('#albums a:first-child')
      .waitForElementVisible('#album', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Audios': browser => {
    browser
      .click('a[href$="audios"]')
      .waitForElementVisible('#audios a', TIMEOUT)
      .assert.containsText('h2', 'Audios')
      .click('#language-switcher')
      .assert.containsText('h2', 'Audios')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'deceiver of the gods')
      // .assert.containsText('#audios a:first-child', 'Deceiver of the Gods')
      .pause(TIMEOUT)
      .click('#audios a:first-child')
      .waitForElementVisible('#audio', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Videos': browser => {
    browser
      .click('a[href$="videos"]')
      .waitForElementVisible('#videos a', TIMEOUT)
      .assert.containsText('h2', 'Vidéos')
      .click('#language-switcher')
      .assert.containsText('h2', 'Videos')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'deep purple')
      // .assert.containsText('#videos a:first-child', 'Deep Purple')
      .pause(TIMEOUT)
      .click('#videos a:first-child')
      .waitForElementVisible('#video', TIMEOUT)
      .assert.visible('h2')
      .waitForElementVisible('iframe', TIMEOUT)
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Labels': browser => {
    browser
      .click('a[href$="labels"]')
      .waitForElementVisible('#labels a', TIMEOUT)
      .assert.containsText('h2', 'Labels')
      .click('#language-switcher')
      .assert.containsText('h2', 'Labels')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'nuclear blast')
      // .assert.containsText('#labels a:first-child', 'Nuclear Blast')
      .pause(TIMEOUT)
      .click('#labels a:first-child')
      .waitForElementVisible('#label', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .click('h1')
      .click('a[href$="encyclopedia"]')
      .pause(TIMEOUT)
  },
  'Places': browser => {
    browser
      .click('a[href$="places"]')
      .waitForElementVisible('#places a', TIMEOUT)
      .assert.containsText('h2', 'Lieux')
      .click('#language-switcher')
      .assert.containsText('h2', 'Places')
      .click('#language-switcher')
      .assert.visible('.search')
      .setValue('.search input', 'cco')
      // .assert.containsText('#places a:first-child', 'CCO Villeurbanne')
      .pause(TIMEOUT)
      .click('#places a:first-child')
      .waitForElementVisible('#place', TIMEOUT)
      .assert.visible('h2')
      .assert.visible('figure')
      .pause(TIMEOUT)
      .end()
  }
}
